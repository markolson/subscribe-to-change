// Floats
/* Float to the right */
.float-right { float: right !important; }
/* Float to the left */
.float-left { float: left !important; }
/* Don't float left or right */
.float-none { float: none !important; }

// Responsive float utlities
// .float-md-left, .float-lg-right, ...
@each $breakpoint in map-keys($breakpoints) {
  @include breakpoint($breakpoint) {
    /* Float to the left at the #{$breakpoint} breakpoint */
    .float-#{$breakpoint}-left  { float: left !important; }
    /* Float to the right at the #{$breakpoint} breakpoint */
    .float-#{$breakpoint}-right  { float: right !important; }
    /* No float at the #{$breakpoint} breakpoint */
    .float-#{$breakpoint}-none { float: none !important; }
  }
}

.clearfix {
  &::before {
    display: table;
    content: "";
  }

  &::after {
    display: table;
    clear: both;
    content: "";
  }
}

.overflow-hidden { overflow: hidden !important; }

.text-center {text-align: center !important;}
.text-right {text-align: right !important;}

// GRID

// Columns
.col-1 { width: (1 / 12 * 100%); }
.col-2 { width: (2 / 12 * 100%); }
.col-3 { width: (3 / 12 * 100%); }
.col-4 { width: (4 / 12 * 100%); }
.col-5 { width: (5 / 12 * 100%); }
.col-6 { width: (6 / 12 * 100%); }
.col-7 { width: (7 / 12 * 100%); }
.col-8 { width: (8 / 12 * 100%); }
.col-9 { width: (9 / 12 * 100%); }
.col-10 { width: (10 / 12 * 100%); }
.col-11 { width: (11 / 12 * 100%); }
.col-12 { width: 100%; }

@each $breakpoint in map-keys($breakpoints) {
  @include breakpoint($breakpoint) {
    .col-#{$breakpoint}-1 { width: ( 1 / 12 * 100%); }
    .col-#{$breakpoint}-2 { width: ( 2 / 12 * 100%); }
    .col-#{$breakpoint}-3 { width: ( 3 / 12 * 100%); }
    .col-#{$breakpoint}-4 { width: ( 4 / 12 * 100%); }
    .col-#{$breakpoint}-5 { width: ( 5 / 12 * 100%); }
    .col-#{$breakpoint}-6 { width: ( 6 / 12 * 100%); }
    .col-#{$breakpoint}-7 { width: ( 7 / 12 * 100%); }
    .col-#{$breakpoint}-8 { width: ( 8 / 12 * 100%); }
    .col-#{$breakpoint}-9 { width: ( 9 / 12 * 100%); }
    .col-#{$breakpoint}-10 { width: ( 10 / 12 * 100%); }
    .col-#{$breakpoint}-11 { width: ( 11 / 12 * 100%); }
    .col-#{$breakpoint}-12 { width: 100%; }
  }
}

// Gutters apply padding and a negative margin to the outside of the container
@mixin gutters ($gutter-width: $spacer3) {
  margin-right: -$gutter-width;
  margin-left: -$gutter-width;

  > [class*="col-"] {
    padding-right: $gutter-width !important;
    padding-left: $gutter-width !important;
  }
}

.gut-sm { @include gutters($spacer-2); }
.gut-md { @include gutters($spacer-3); }
.gut-lg { @include gutters($spacer-4); }


.d-block {
  display: block !important;
}

.d-inline-block {
  display: inline-block !important;
}

.container {
  max-width: 900px;
  padding: $spacer-4;
}

.flex-container {
  display: flex;
  flex-wrap: wrap;
}

.flex-center {
  align-items: center;
}

.flex-stretch {
  align-items: stretch;
}

.flex-item {
  flex-basis: auto;
}
